name: Backend-Deploy

# トリガー
# mainにプッシュした時に実行
# backendのディレクトリが更新された時に実行
on:
  push:
    branches:
      - main
      - feature/backend-cd
    # paths:
    #   - 'backend/**'

# 環境変数
env:
  AWS_REGION: ap-northeast-1
  REPOSITORY_NAME_BACKEND: dena-training-2024-team-4-backend
  # TODO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECS_CLUSTER: dena-training-2024
  ECS_SERVICE: dena-training-2024-team-4

  # BUCKET_PREFIX: team-4 # S3使わないからコメントアウト
  # VITE_API_ENDPOINT_PATH: https://team-0_bk.member0005.track-bootcamp.run # frontじゃないから使わないからコメントアウト

# workflowで何を実行するか
jobs:
  # backendをbuildしてartifactに保存する
  backend-ecr-push:
    runs-on: ubuntu-latest

    steps:
    # リポジトリをチェックアウト（コードをコピーする感じ）
    - name: Checkout code
      uses: actions/checkout@v2

    # Goのセットアップ(環境構築)
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22'

    # backendのディレクトリに移動(buildするため)
    - name: Build
      working-directory: ./backend
      run: go build -o myapp

    # Docker Buildxのセットアップ
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # AWSの認証情報を設定
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

    # ECRにログイン
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    # DockerイメージをビルドしてECRにプッシュ
    - name: Build and push Docker image
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        IMAGE_TAG=latest

        docker build -f docker/backend-ci.Dockerfile -t $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME_BACKEND:$IMAGE_TAG .
        docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME_BACKEND:$IMAGE_TAG




    # 作成したバイナリとDockerfileをartifactに保存
    # ecr-pushで使用するため
    # - name: Archive production artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: backend-bin
    #     path: |
    #       backend/myapp
    #       docker/backend-ci.Dockerfile

  # backendのdeploy(ECR更新とサービスのdeploy)
  # backend-ecr-push:
    # runs-on: ubuntu-latest
    # needs: [backend-build]
    # if: github.ref == 'refs/heads/deploy'

    # steps:
    # # artifactはGO環境を一時保存する場所
    # artifactからバイナリとDockerfileを取得
    # - name: Download backend build artifacts
    #   uses: actions/download-artifact@v4
    #   with:
    #     name: backend-bin

    # # Docker Buildxのセットアップ
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # # AWSの認証情報を設定
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-region: ${{ env.AWS_REGION }}
    #     aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

    # # ECRにログイン
    # - name: Log in to Amazon ECR
    #   uses: aws-actions/amazon-ecr-login@v2

    # # DockerイメージをビルドしてECRにプッシュ
    # - name: Build and push Docker image
    #   run: |
    #     ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
    #     IMAGE_TAG=latest

    #     docker build -f docker/backend-ci.Dockerfile -t $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME_BACKEND:$IMAGE_TAG .
    #     docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME_BACKEND:$IMAGE_TAG
