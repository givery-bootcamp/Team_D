/*
Twitter API

This is a sample server Twitter API server.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TweetsListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TweetsListInner{}

// TweetsListInner struct for TweetsListInner
type TweetsListInner struct {
	Tweet *Tweet `json:"tweet,omitempty"`
}

// NewTweetsListInner instantiates a new TweetsListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetsListInner() *TweetsListInner {
	this := TweetsListInner{}
	return &this
}

// NewTweetsListInnerWithDefaults instantiates a new TweetsListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetsListInnerWithDefaults() *TweetsListInner {
	this := TweetsListInner{}
	return &this
}

// GetTweet returns the Tweet field value if set, zero value otherwise.
func (o *TweetsListInner) GetTweet() Tweet {
	if o == nil || IsNil(o.Tweet) {
		var ret Tweet
		return ret
	}
	return *o.Tweet
}

// GetTweetOk returns a tuple with the Tweet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetsListInner) GetTweetOk() (*Tweet, bool) {
	if o == nil || IsNil(o.Tweet) {
		return nil, false
	}
	return o.Tweet, true
}

// HasTweet returns a boolean if a field has been set.
func (o *TweetsListInner) HasTweet() bool {
	if o != nil && !IsNil(o.Tweet) {
		return true
	}

	return false
}

// SetTweet gets a reference to the given Tweet and assigns it to the Tweet field.
func (o *TweetsListInner) SetTweet(v Tweet) {
	o.Tweet = &v
}

func (o TweetsListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TweetsListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tweet) {
		toSerialize["tweet"] = o.Tweet
	}
	return toSerialize, nil
}

type NullableTweetsListInner struct {
	value *TweetsListInner
	isSet bool
}

func (v NullableTweetsListInner) Get() *TweetsListInner {
	return v.value
}

func (v *NullableTweetsListInner) Set(val *TweetsListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetsListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetsListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetsListInner(val *TweetsListInner) *NullableTweetsListInner {
	return &NullableTweetsListInner{value: val, isSet: true}
}

func (v NullableTweetsListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetsListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


